# Public part of tokenizer's keypair
seal_key: "$TOKENIZER_SEAL_KEY"

# Apps using sealed secrets with tokenizer will put this token in the
# `Proxy-Authorization` header.
proxy_authorization: "$PROXY_AUTH"

http:
  # Where ssokenizer should listen
  address: ":$PORT"

# Where users will be sent with the sealed token after the authenticating. The
# string `:name` will be replaced with the provider name. The string `:profile`
# will be replaced with the name of the provider profile. This can also be
# specified on individual providers bellow.
#
# return_url: "https://my.app/sso/:profile/:name/callback"

identity_providers:
  # `google` here is the provider name. Users will go to
  # https://<ssokenizer_url>/<provider_name>/start to start the oauth dance
  google:
    profile: google
    client_id: "$OAUTH_GOOGLE_CLIENT_ID"
    client_secret: "$OAUTH_GOOGLE_CLIENT_SECRET"
    return_url: "$BASE_URL/calendar/connection/google/callback"
    scopes:
      - email
      - profile
      - https://www.googleapis.com/auth/calendar.readonly

  microsoft:
    profile: oauth
    client_id: "$OAUTH_MS_CLIENT_ID"
    client_secret: "$OAUTH_MS_CLIENT_SECRET"
    auth_url: "https://login.microsoftonline.com/common/oauth2/v2.0/authorize"
    token_url: "https://login.microsoftonline.com/common/oauth2/v2.0/token"
    return_url: "$BASE_URL/calendar/connection/microsoft/callback"
    scopes:
      - offline_access
      - Calendars.Read
